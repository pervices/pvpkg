#!/bin/bash

# This script configures a dedicated management network interface on Ubuntu 24.04 LTS.
# It uses netplan and ufw to create persistent configurations.

# --- Script Safety Flags ---
# Exit immediately on error, treat unset variables as an error, and handle pipeline failures.
set -Eeuo pipefail

# --- Help/Usage Function ---
# Displays clear usage instructions if the script is run incorrectly.
function help_synopsis {
    echo -e "\nUSAGE:"
    echo -e "\t sudo $0 <interface-name>"
    echo -e "\nDESCRIPTION:"
    echo -e "\t This script configures the specified network interface with a static IP"
    echo -e "\t address (192.168.10.10/24) and sets a firewall rule to allow all"
    echo -e "\t incoming traffic on that interface, making it a 'trusted' management port."
    echo -e "\nEXAMPLE:"
    echo -e "\t sudo $0 eth0"
}

# --- Argument Validation ---
# Ensure exactly one argument (the interface name) is provided.
if [ "$#" -ne 1 ]; then
    echo "ERROR: Incorrect number of arguments provided."
    help_synopsis
    exit 1
fi

# --- Runtime Environment Checks ---
# This script requires root privileges to modify network and firewall settings.
if [ "$EUID" -ne 0 ]; then
    echo "ERROR: Please run this script as root or with sudo."
    exit 1
fi

# --- Argument Parsing ---
# Assign the first argument to a clear variable name.
IFACE_NAME=$1

# --- Persistent Network Configuration (Netplan) ---
echo -e "\n Generating persistent netplan configuration for '$IFACE_NAME'..."

# Define the network settings per MGMT port requirements.
IP_ADDR="192.168.10.10/24"
GATEWAY="192.168.10.1"
NETPLAN_FILE="/etc/netplan/98-mgmt-config-${IFACE_NAME}.yaml"

# Create the netplan YAML configuration file using a here document.
# This method is clean and prevents issues with special characters.
cat <<EOF > "$NETPLAN_FILE"
# This file was auto-generated by configMGMT.sh for the management interface.
network:
  version: 2
  ethernets:
    $IFACE_NAME:
      addresses:
        - $IP_ADDR
      routes:
        - to: default
          via: $GATEWAY
EOF
# Set secure permissions for the netplan config file.
chmod 600 "$NETPLAN_FILE"
# Apply the new network configuration.
echo "Applying network configuration..."
netplan apply

# --- Persistent Firewall Configuration (ufw) ---
echo -e "\n Configuring persistent firewall rules with ufw..."

# The ufw equivalent of a 'trusted zone' is to allow all traffic on the interface.
# ufw rules are persistent by default.
echo "Setting rule to allow all incoming traffic on '$IFACE_NAME'..."
ufw allow in on "$IFACE_NAME"

# Reload the firewall to activate the new rule.
echo "Reloading firewall rules..."
ufw reload

echo -e "\n Configuration for management interface '$IFACE_NAME' is complete.\n"
exit 0
